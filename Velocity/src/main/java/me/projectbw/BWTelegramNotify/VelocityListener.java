package me.projectbw.BWTelegramNotify;

import com.velocitypowered.api.event.Subscribe;
import com.velocitypowered.api.event.connection.DisconnectEvent;
import com.velocitypowered.api.event.connection.LoginEvent;
import com.velocitypowered.api.event.player.ServerConnectedEvent;
import com.velocitypowered.api.event.proxy.ProxyShutdownEvent;
import com.velocitypowered.api.event.proxy.ProxyInitializeEvent;
import com.velocitypowered.api.event.connection.PluginMessageEvent;
import com.velocitypowered.api.plugin.Plugin;
import com.velocitypowered.api.proxy.Player;
import com.velocitypowered.api.proxy.proxy.ProxyServer;
import com.velocitypowered.api.proxy.messages.ChannelIdentifier;
import com.velocitypowered.api.proxy.messages.MinecraftChannelIdentifier;
import java.nio.charset.StandardCharsets;

@Plugin(
    id = "bwtelegramnotify",
    name = "BWTelegramNotify",
    version = "1.1.0",
    description = "–ü–ª–∞–≥–∏–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram",
    authors = {"The_Mr_Mes109"}
)
public class VelocityListener {

    private final ProxyServer server;
    private final VelocityMain plugin;
    private static final ChannelIdentifier CHANNEL = MinecraftChannelIdentifier.from("bwtelegram:notify");

    public VelocityListener(ProxyServer server, VelocityMain plugin) {
        this.server = server;
        this.plugin = plugin;
    }

    private String applyTemplate(String template, String playerName, String previousServer, String newServer) {
        return template
                .replace("%player%", playerName)
                .replace("%previous_server%", previousServer)
                .replace("%new_server%", newServer);
    }

    @Subscribe
    public void onPlayerLogin(LoginEvent event) {
        Player player = event.getPlayer();
        String playerName = player.getUsername();
        plugin.getLogger().info("–ò–≥—Ä–æ–∫ –∑–∞—à–µ–ª: " + playerName);
        
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.player_logged_in", "‚úÖ **–ò–≥—Ä–æ–∫ –∑–∞—à–µ–ª**: %player%");
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String message = applyTemplate(messageTemplate, playerName, null, null);
        plugin.getTelegramBot().sendMessage(message);
    }

    @Subscribe
    public void onPlayerDisconnect(DisconnectEvent event) {
        Player player = event.getPlayer();
        String playerName = player.getUsername();
        plugin.getLogger().info("–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª: " + playerName);
        
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.player_logged_out", "‚ùå **–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª**: %player%");
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String message = applyTemplate(messageTemplate, playerName, null, null);
        plugin.getTelegramBot().sendMessage(message);
    }

    @Subscribe
    public void onPlayerSwitchServer(ServerConnectedEvent event) {
        Player player = event.getPlayer();
        String playerName = player.getUsername();
        String previousServer = event.getPreviousServer().map(s -> s.getServerInfo().getName()).orElse("–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω");
        String newServer = event.getServer().getServerInfo().getName();

        plugin.getLogger().info("–ò–≥—Ä–æ–∫ " + playerName + " —Å–º–µ–Ω–∏–ª —Å–µ—Ä–≤–µ—Ä: " + previousServer + " -> " + newServer);
        
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.player_switched_server", "üîÑ **–ò–≥—Ä–æ–∫ —Å–º–µ–Ω–∏–ª —Å–µ—Ä–≤–µ—Ä**: %player%\n‚û° **%previous_server%** ‚Üí **%new_server%**");
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String message = applyTemplate(messageTemplate, playerName, previousServer, newServer);
        plugin.getTelegramBot().sendMessage(message);
    }

    @Subscribe
    public void onProxyShutdown(ProxyShutdownEvent event) {
        plugin.getLogger().info("BWTelegramNotify: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞...");
        
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.server_stopped", "üî¥ **–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!**");
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String message = applyTemplate(messageTemplate, null, null, null);
        plugin.getTelegramBot().sendMessage(message);

        plugin.getLogger().info("BWTelegramNotify —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω.");
    }

    @Subscribe
    public void onProxyInitialize(ProxyInitializeEvent event) {
        plugin.getLogger().info("BWTelegramNotify: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞...");
        
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.server_started", "üîµ **–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!**");
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String message = applyTemplate(messageTemplate, null, null, null);
        plugin.getTelegramBot().sendMessage(message);
    }

    @Subscribe
    public void onPluginMessage(PluginMessageEvent event) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –ø–æ –Ω—É–∂–Ω–æ–º—É –∫–∞–Ω–∞–ª—É
        if (!event.getIdentifier().equals(CHANNEL)) return;

        String message = new String(event.getData(), StandardCharsets.UTF_8);
        plugin.getLogger().info("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Paper: " + message);

        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = plugin.getConfig().getString("messages.from_paper", "üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Paper: %message%");

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        String formattedMessage = applyTemplate(messageTemplate, message, null, null);
        plugin.getTelegramBot().sendMessage(formattedMessage);
    }
}
