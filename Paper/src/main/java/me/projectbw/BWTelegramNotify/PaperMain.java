package me.projectbw.BWTelegramNotify;

import org.bukkit.Bukkit;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.server.ServerLoadEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;
import org.simpleyaml.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.logging.Logger;

public class PaperMain extends JavaPlugin implements Listener {

    private YamlConfiguration config;
    private Logger logger;
    private static final double TPS_THRESHOLD = 15.0;
    private static final String VELOCITY_SERVER_ADDRESS = "http://velocity-server-address";  // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ Velocity

    @Override
    public void onEnable() {
        try {
            this.logger = getLogger();

            // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –ø–ª–∞–≥–∏–Ω–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if (!getDataFolder().exists()) {
                getDataFolder().mkdirs();
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            loadConfig();

            // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
            sendMessageToVelocity("server_started", getServerName());

            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è
            getServer().getPluginManager().registerEvents(this, this);

            // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ TPS
            startTPSMonitoring();

            logger.info("BWTelegramNotify —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
        } catch (IOException e) {
            logger.severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Override
    public void onDisable() {
        sendMessageToVelocity("server_stopped", getServerName());
        logger.info("BWTelegramNotify –æ—Ç–∫–ª—é—á–µ–Ω.");
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        sendMessageToVelocity("player_join", event.getPlayer().getName(), getServerName());
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        sendMessageToVelocity("player_quit", event.getPlayer().getName(), getServerName());
    }

    @EventHandler
    public void onServerLoad(ServerLoadEvent event) {
        checkTPS();
    }

    private void loadConfig() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        this.config = YamlConfiguration.loadConfiguration(new File(getDataFolder(), "config.yml"));

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        config.addDefault("messages.server_started", "‚úÖ **–°–µ—Ä–≤–µ—Ä {server} –∑–∞–ø—É—â–µ–Ω!**");
        config.addDefault("messages.server_stopped", "‚õî **–°–µ—Ä–≤–µ—Ä {server} –≤—ã–∫–ª—é—á–µ–Ω!**");
        config.addDefault("messages.player_join", "üîµ **–ò–≥—Ä–æ–∫ {player} –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä {server}**");
        config.addDefault("messages.player_quit", "‚ö™ **–ò–≥—Ä–æ–∫ {player} –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞ {server}**");
        config.addDefault("messages.low_tps", "‚ö† –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–∏–∑–∫–∏–π TPS: {tps} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {server}");
        config.options().copyDefaults(true);  // –ö–æ–ø–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥
        saveConfig();  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞)
    }

    private String getServerName() {
        return Bukkit.getServer().getName();
    }

    private void sendMessageToVelocity(String messageKey, String... args) {
        // –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        String messageTemplate = config.getString("messages." + messageKey, "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        String message = String.format(messageTemplate, (Object[]) args);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Velocity
        sendToVelocity(message);
    }

    private void sendToVelocity(String message) {
        try {
            URL url = new URL(VELOCITY_SERVER_ADDRESS + "/send-message?message=" + message);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.getResponseCode();  // –ü—Ä–æ—Å—Ç–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        } catch (IOException e) {
            logger.severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ Velocity: " + e.getMessage());
        }
    }

    private void checkTPS() {
        try {
            double tps = Bukkit.getServer().getTPS()[0];
            if (tps < TPS_THRESHOLD) {
                sendMessageToVelocity("low_tps", String.valueOf(tps), getServerName());
            }
        } catch (Exception e) {
            Bukkit.getLogger().severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ TPS: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ TPS
    private void startTPSMonitoring() {
        new BukkitRunnable() {
            @Override
            public void run() {
                checkTPS();
            }
        }.runTaskTimerAsynchronously(this, 0L, 1200L); // –ö–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
    }
}