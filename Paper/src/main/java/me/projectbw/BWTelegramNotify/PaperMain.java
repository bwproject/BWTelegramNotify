package me.projectbw.BWTelegramNotify;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.List;

public class PaperMain extends JavaPlugin implements Listener {
    private static boolean running = false;
    private TelegramBot telegramBot;
    private PluginUpdater pluginUpdater;
    private double tpsThreshold;
    private boolean updateEnabled;

    @Override
    public void onEnable() {
        running = true;
        saveDefaultConfig();
        reloadConfig();

        List<String> chatIds = getConfig().getStringList("telegram.chatIds");
        String botToken = getConfig().getString("telegram.botToken", "").trim();
        tpsThreshold = getConfig().getDouble("settings.tps", 15.0);
        updateEnabled = getConfig().getBoolean("settings.update", true);

        if (botToken.isEmpty() || chatIds.isEmpty()) {
            getLogger().severe("‚ùå –û—à–∏–±–∫–∞: botToken –∏–ª–∏ chatIds –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ config.yml! –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞...");
            getServer().getPluginManager().disablePlugin(this);
            return;
        }

        telegramBot = new TelegramBot(botToken, chatIds);
        pluginUpdater = new PluginUpdater();

        Bukkit.getPluginManager().registerEvents(this, this);

        if (getCommand("bwstatusbot") != null) {
            getCommand("bwstatusbot").setExecutor(new StatusCommand());
        } else {
            getLogger().warning("‚ö† –ö–æ–º–∞–Ω–¥–∞ /bwstatusbot –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ plugin.yml!");
        }

        getServer().getConsoleSender().sendMessage("\n¬ßa==============================\n"
                + "¬ßa=== –ü–ª–∞–≥–∏–Ω BWTelegramNotify –∞–∫—Ç–∏–≤–µ–Ω ===\n"
                + "¬ßa==============================");

        getLogger().info("‚úÖ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω: " + telegramBot.getBotName() + " (@" + telegramBot.getBotUsername() + ")");

        telegramBot.sendMessage(getConfig().getString("messages.server_started", "‚úÖ **Paper-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!**"));

        if (updateEnabled) {
            Bukkit.getScheduler().runTaskAsynchronously(this, () -> pluginUpdater.checkForUpdates());
        }

        startTpsMonitor();
    }

    @Override
    public void onDisable() {
        running = false;

        if (telegramBot != null) {
            telegramBot.sendMessage(getConfig().getString("messages.server_stopped", "‚õî **Paper-—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!**"));
        }

        getLogger().info("‚õî BWTelegramNotify –æ—Ç–∫–ª—é—á–µ–Ω!");
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        if (telegramBot == null) return;

        String message = getConfig().getString("messages.player_join", "üîµ **–ò–≥—Ä–æ–∫ –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä:** {player}")
                .replace("{player}", event.getPlayer().getName());
        telegramBot.sendMessage(message);
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        if (telegramBot == null) return;

        String message = getConfig().getString("messages.player_quit", "‚ö™ **–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞:** {player}")
                .replace("{player}", event.getPlayer().getName());
        telegramBot.sendMessage(message);
    }

    private void startTpsMonitor() {
        new BukkitRunnable() {
            @Override
            public void run() {
                double tps = Bukkit.getTPS()[0];
                if (tps < tpsThreshold) {
                    if (telegramBot == null) return;

                    String message = getConfig().getString("messages.low_tps", "‚ö† **–ù–∏–∑–∫–∏–π TPS:** {tps}")
                            .replace("{tps}", String.format("%.2f", tps));
                    telegramBot.sendMessage(message);
                }
            }
        }.runTaskTimer(this, 600L, 1200L);
    }

    private class StatusCommand implements CommandExecutor {
        @Override
        public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
            if (telegramBot == null) {
                sender.sendMessage("‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.");
                return true;
            }

            String message = "üì¢ BWTelegramNotify:\n"
                    + "–ë–æ—Ç: " + telegramBot.getBotName() + " (@" + telegramBot.getBotUsername() + ")\n"
                    + "–°–µ—Ä–≤–µ—Ä: Paper";

            sender.sendMessage(message);
            getLogger().info(message);
            return true;
        }
    }
}