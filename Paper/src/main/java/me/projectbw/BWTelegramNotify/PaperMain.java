package me.projectbw.BWTelegramNotify;

import org.bukkit.Bukkit;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.server.ServerLoadEvent;
import org.bukkit.event.server.ServerShutdownEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.simpleyaml.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;

public class PaperMain extends JavaPlugin implements Listener {
    private YamlConfiguration config;
    private Logger logger;

    @Override
    public void onEnable() {
        this.logger = getLogger();
        loadConfig();

        // –£–±–∏—Ä–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TelegramBot
        String message = config.getString("messages.server_started", "‚úÖ **–°–µ—Ä–≤–µ—Ä {server} –∑–∞–ø—É—â–µ–Ω!**")
                .replace("{server}", getServerName());
        logger.info(message);

        getServer().getPluginManager().registerEvents(this, this);
        logger.info("BWTelegramNotify —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
    }

    @Override
    public void onDisable() {
        String message = config.getString("messages.server_stopped", "‚õî **–°–µ—Ä–≤–µ—Ä {server} –≤—ã–∫–ª—é—á–µ–Ω!**")
                .replace("{server}", getServerName());
        logger.info(message);
        logger.info("BWTelegramNotify –æ—Ç–∫–ª—é—á–µ–Ω.");
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        String message = config.getString("messages.player_join", "üîµ **–ò–≥—Ä–æ–∫ {player} –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä {server}**")
                .replace("{player}", event.getPlayer().getName())
                .replace("{server}", getServerName());
        logger.info(message);
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        String message = config.getString("messages.player_quit", "‚ö™ **–ò–≥—Ä–æ–∫ {player} –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞ {server}**")
                .replace("{player}", event.getPlayer().getName())
                .replace("{server}", getServerName());
        logger.info(message);
    }

    @EventHandler
    public void onServerLoad(ServerLoadEvent event) {
        checkTPS();
    }

    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –º–µ—Ç–æ–¥—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
}