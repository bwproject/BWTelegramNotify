package me.projectbw.BWTelegramNotify;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.List;

public class PaperMain extends JavaPlugin implements Listener {
    private static boolean running = false;
    private TelegramBot telegramBot;
    private double tpsThreshold;
    private boolean updateEnabled;

    @Override
    public void onEnable() {
        running = true;
        saveDefaultConfig();
        reloadConfig();

        String botToken = getConfig().getString("telegram.botToken", "").trim();
        List<String> chatIds = getConfig().getStringList("telegram.chatIds");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∏ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç—ã–µ
        if (botToken.isEmpty() || chatIds.isEmpty()) {
            getLogger().severe("‚ùå –û—à–∏–±–∫–∞: botToken –∏–ª–∏ chatIds –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ config.yml! –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞...");
            getServer().getPluginManager().disablePlugin(this);
            return;
        }

        tpsThreshold = getConfig().getDouble("settings.tps", 15.0);
        updateEnabled = getConfig().getBoolean("settings.update", true);

        if (Bukkit.getPluginManager().getPlugin("Velocity") != null) {
            // –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Velocity, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Velocity
            sendToVelocity("server_started", getConfig().getString("messages.server_started", "‚úÖ **Paper-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!**"));
        } else {
            // –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Paper, —Å–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
            telegramBot = new TelegramBot(botToken, chatIds);
            telegramBot.sendMessage(getConfig().getString("messages.server_started", "‚úÖ **Paper-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!**"));
        }

        if (updateEnabled) {
            Bukkit.getScheduler().runTaskAsynchronously(this, () -> new PluginUpdater().checkForUpdates());
        }

        startTpsMonitor();
    }

    @Override
    public void onDisable() {
        running = false;

        if (telegramBot != null) {
            telegramBot.sendMessage(getConfig().getString("messages.server_stopped", "‚õî **Paper-—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!**"));
        }

        sendToVelocity("server_stopped", getConfig().getString("messages.server_stopped", "‚õî **Paper-—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!**"));

        getLogger().info("‚õî BWTelegramNotify –æ—Ç–∫–ª—é—á–µ–Ω!");
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        String message = getConfig().getString("messages.player_join", "üîµ **–ò–≥—Ä–æ–∫ –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä:** {player}")
                .replace("{player}", event.getPlayer().getName());

        if (telegramBot != null) {
            telegramBot.sendMessage(message);
        } else {
            sendToVelocity("player_join", message);
        }
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        String message = getConfig().getString("messages.player_quit", "‚ö™ **–ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞:** {player}")
                .replace("{player}", event.getPlayer().getName());

        if (telegramBot != null) {
            telegramBot.sendMessage(message);
        } else {
            sendToVelocity("player_quit", message);
        }
    }

    private void sendToVelocity(String action, String message) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä Velocity, –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
        Bukkit.getServer().dispatchCommand(Bukkit.getConsoleSender(), "velocity_send " + action + " " + message);
    }

    private void startTpsMonitor() {
        new BukkitRunnable() {
            @Override
            public void run() {
                double tps = Bukkit.getTPS()[0];
                if (tps < tpsThreshold) {
                    String message = getConfig().getString("messages.low_tps", "‚ö† **–ù–∏–∑–∫–∏–π TPS:** {tps}")
                            .replace("{tps}", String.format("%.2f", tps));
                    if (telegramBot != null) {
                        telegramBot.sendMessage(message);
                    } else {
                        sendToVelocity("low_tps", message);
                    }
                }
            }
        }.runTaskTimer(this, 600L, 1200L);
    }

    private class StatusCommand implements CommandExecutor {
        @Override
        public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
            String message = "üì¢ BWTelegramNotify:\n"
                    + "–°–µ—Ä–≤–µ—Ä: " + (Bukkit.getPluginManager().getPlugin("Velocity") != null ? "Velocity" : "Paper");

            sender.sendMessage(message);
            getLogger().info(message);
            return true;
        }
    }
}